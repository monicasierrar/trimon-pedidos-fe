name: Deploy Trimon Pedidos FE on Pre-Release

on:
  release:
    types: [prereleased] # This workflow runs when a new pre-release is published

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write # Grant write permissions for the GITHUB_TOKEN

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Ensure we fetch the tag itself for proper version extraction
          fetch-depth: 0 # Fetch all history for tag access

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get version from release tag
        id: get_tag_version
        run: |
          # Get the tag name from the GITHUB_REF (e.g., refs/tags/v1.2.3-beta.0)
          # Remove "refs/tags/" prefix and "v" prefix if present
          VERSION=$(echo "${{ github.ref }}" | sed 's/refs\/tags\///' | sed 's/^v//')
          echo "Extracted Version from Tag: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update package.json with release tag version
        run: |
          # Read package.json, update version, and write it back
          node -P "p=require('./package.json'); p.version='${{ env.VERSION }}'; JSON.stringify(p, null, 2)" > package.json.tmp
          mv package.json.tmp package.json
          echo "Updated package.json to version ${{ env.VERSION }}"

      - name: Commit package.json version update (optional but good practice)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore(release): Update package.json version to ${{ env.VERSION }} from release tag [skip ci]"
          git push

      - name: Install dependencies
        run: npm ci

      - name: Build Trimon Pedidos FE
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: main # The branch to deploy to
          folder: build # The folder containing your built Trimon Pedidos FE
          token: ${{ secrets.GITHUB_TOKEN }} # Use the default GITHUB_TOKEN