name: Deploy Trimon Pedidos FE on Pre-Release

on:
  release:
    types: [published]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.release.prerelease && 'pilot' || 'production' }}

    permissions:
      contents: write # Grant write permissions for the GITHUB_TOKEN

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 # Fetch all history for tag access

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Get version from release tag
        id: get_tag_version
        run: |
          # Extract the version from the release tag (e.g., refs/tags/v1.2.3-beta.0)
          VERSION=$(echo "${{ github.ref }}" | sed 's/refs\/tags\///' | sed 's/^v//')
          echo "Extracted Version from Tag: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update package.json with release tag version
        run: |
          # Update the version in package.json
          node -e "let p=require('./package.json'); p.version='${{ env.VERSION }}'; require('fs').writeFileSync('package.json', JSON.stringify(p, null, 2));"
          echo "Updated package.json to version ${{ env.VERSION }}"

      - name: Commit package.json version update
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore(release): Update package.json version to ${{ env.VERSION }} from release tag [skip ci]"

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build Trimon Pedidos FE
        run: npm run build
        env: VITE_ZOHO_CLIENT_ID=${{ vars.VITE_ZOHO_CLIENT_ID }}
          VITE_API_BASE_URL="https://pedidos-api.trimon.co/webhook"
          VITE_REDIRECT_URI="https://pedidos-api.trimon.co/webhook/authorize"
          VITE_USE_AUTH="true"

      - name: ðŸ”‘ Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # Use OIDC for secure, password-less authentication with AWS
          role-to-assume: ${{ secrets.AWS_DEPLOYMENT_IAM_ROLE_ARN }}
          aws-region: us-east-1 # Use your AWS region

      - name: ðŸš€ Deploy to S3 and Invalidate CloudFront
        uses: andrewdex/s3-deploy-action@v1 # A popular and effective action
        with:
          AWS_S3_BUCKET: ${{ vars.S3_BUCKET_NAME }} # Bucket name from environment variables
          CLOUDFRONT_DISTRIBUTION_ID: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} # Distribution ID from environment variables
          DEST_DIR: "" # Deploy to the root of the bucket
          SOURCE_DIR: "build" # Your React build directory
          INVALIDATION_PATHS: "/*" # Invalidate all paths in the distribution
          AWS_REGION: us-east-1
      
      - name: âœ… Deployment Complete
        run: echo "Successfully deployed to the ${{ github.event.release.prerelease && 'PILOT' || 'PRODUCTION' }} environment!"
